{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","id","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","style","color","key","GifExpertApp","display","justifyContent","fontSize","marginLeft","href","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,oCACI,0BAAMC,SAbO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAY,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAExCN,EAAc,OASV,2BACIO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SAvBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aCNlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,uBAAGK,GAAG,WAAWL,K,uBCThBM,EAAO,uCAAG,WAAOb,GAAP,uBAAAc,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUf,GAF7C,+DAGAgB,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CAEHV,GAAIU,EAAIV,GACRL,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZY,GAfY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAjBAC,qBAAU,WACNhB,EAAQb,GACH8B,MAAK,SAAAC,GAIFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAOtB,CAAC1B,IAEG2B,EDpB2BK,CAAahC,GAAjCuB,EAFuB,EAE7BJ,KAAcO,EAFe,EAEfA,QAGtB,OAEI,oCACI,wBAAIO,MAAO,CAAEC,MAAO,UAAW,0CAI9BR,GAAW,uBAAGjB,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAGPc,EAAOF,KAAI,SAAAC,GAAG,OAEV,kBAAC,EAAD,eACIa,IAAKb,EAAIV,IACLU,OAKhB,yBAAKb,UAAU,gBACX,+CAAoB,2BAAIT,QE1B/BoC,EAAe,WAAO,IAAD,EAGE5C,mBAAS,CAAC,aAHZ,mBAGvBQ,EAHuB,KAGbT,EAHa,KAS9B,OACI,oCACI,wBAAIkB,UAAU,oCAAoCG,GAAG,QAAQqB,MAAO,CAAEI,QAAS,OAAQC,eAAgB,SAAUC,SAAU,UAA3H,gBACA,uBAAG9B,UAAU,wCAAwCwB,MAAO,CAAEI,QAAS,OAAQC,eAAgB,WAA/F,+BAFJ,IAE+I,6BAE3I,kBAAC,EAAD,CAAa/C,YAAaA,IAC1B,6BAEA,4BAEQS,EAASqB,KAAI,SAAArB,GAAQ,OACjB,kBAAC,EAAD,CACImC,IAAKnC,EACLA,SAAUA,QAQ1B,6BACA,yBAAKS,UAAU,oBACX,uBAAGA,UAAU,UAAb,iEAAiF,uBAAGwB,MAAO,CAAEO,WAAY,OAASC,KAAK,sBAAtC,YAAjF,QC/BhBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3f9e2bcf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setcategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            // console.log('Submit DONE');\r\n            setcategory(category => [inputValue, ...category]);\r\n\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setcategory: PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p id=\"toggler\">{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n\r\n\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=11&api_key=ajqZ7bnJHBfXiq0j2JHENK0pGfMN2vhS`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 style={{ color: \"white\" }}><u>Bienvenido</u></h3>\r\n\r\n\r\n            {/* Si el primero es true, crea el segundo */}\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        // <li key={img.id}>{img.title}</li>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n\r\n\r\n                <div className=\"CategoryName\">\r\n                    <p>Su categoria es: <b>{category}</b></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n\r\n\r\n            })\r\n    }, [category])\r\n\r\n    return state; //{data:[], loading: true};\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [category, setcategory] = useState(['WELCOME!'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategory([...category, 'HunterXHunter']); //SPREAD para agregar elementos al arreglo usando setcategory para cambiar el state\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__animated animate__fadeIn\" id=\"title\" style={{ display: \"flex\", justifyContent: \"center\", fontSize: \"10rem\" }}>GifExpertApp</h1>\r\n            <p className=\"animate__animated animate__backInDown\" style={{ display: \"flex\", justifyContent: \"center\" }}>- Que Gif Estas Buscando? -</p> <br />\r\n\r\n            <AddCategory setcategory={setcategory} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    category.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                    // <li key={category}>{category}</li> //key obligatorio y unico\r\n\r\n                }\r\n            </ol>\r\n\r\n            <br />\r\n            <div className=\"footerContenedor\">\r\n                <p className=\"footer\"> Encontras lo que buscas? m√°s gifs en la pagina oficial de <a style={{ marginLeft: \"4px\" }} href=\"https://giphy.com/\">  GIPHY </a>.</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n//<h2>GifExpertApp</h2>\n// <hr />"],"sourceRoot":""}